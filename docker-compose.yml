services:

  newsblur_web:
    hostname: nb.com
    container_name: newsblur_web
    image: ghcr.io/duxet/newsblur:latest
    # build: 
    #   context: /srv/newsblur
    #   dockerfile: docker/newsblur_base_image.Dockerfile
    restart: unless-stopped
    depends_on:
      - db_mongo
      - db_postgres
      - db_redis
      - db_elasticsearch
    ulimits:
      nproc: 10000
      nofile:
        soft: 10000
        hard: 10000
    ports:
      - 8000:8000

  newsblur_node:
    container_name: newsblur_node
    image: ghcr.io/duxet/newsblur_node:latest
    restart: unless-stopped
    stop_signal: HUP
    depends_on: 
      - db_mongo
      - db_postgres
      - db_redis
    ports:
      - 8008:8008
  
  task_celery:
    container_name: task_celery
    image: ghcr.io/duxet/newsblur:latest
    command: "celery worker -A newsblur_web -B --loglevel=INFO"
    restart: unless-stopped

  imageproxy:
    container_name: imageproxy
    image: ghcr.io/willnorris/imageproxy:latest # Enable if you don't need arm64 and want the original imageproxy
    # image: yusukeito/imageproxy:v0.11.2 # Enable if you want arm64 
    entrypoint: /app/imageproxy -addr 0.0.0.0:8088 -cache /tmp/imageproxy -verbose
    restart: unless-stopped
    ports:
      - 8088:8088
    volumes:
      - /tmp:/tmp/imageproxy

  db_postgres:
    container_name: db_postgres
    image: postgres:13.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=newsblur
      - POSTGRES_PASSWORD=newsblur
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U newsblur"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    ports:
      - 5434:5432
    volumes:
      - ./docker/volumes/postgres:/var/lib/postgresql/data

  db_redis:
    container_name: db_redis
    image: redis:latest
    ports:
      - 6579:6579
    restart: unless-stopped
    volumes:
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
      - ./docker/redis/redis_server.conf:/usr/local/etc/redis/redis_replica.conf
      - ./docker/volumes/redis:/data
    command: redis-server /etc/redis/redis.conf --port 6579

  db_elasticsearch:
    container_name: db_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    mem_limit: 512mb
    restart: unless-stopped
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker/volumes/elasticsearch:/usr/share/elasticsearch/data
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  db_mongo:
    container_name: db_mongo
    image: mongo:4.0
    user: mongodb
    restart: unless-stopped
    ports:
      - 29019:29019
    command: mongod --port 29019
    volumes:
      - ./docker/volumes/db_mongo:/data/db
